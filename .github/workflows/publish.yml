# GitHub packages build and push v2
name: Build and Push Docker Image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/piggybot:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VDS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}

          script: |
            docker login -u ${{ github.repository_owner }} -p ${{ secrets.TOKEN }} ghcr.io
            docker stop piggybot
            docker rm piggybot
            docker images -a | grep "piggybot" | awk '{print $3}' | xargs docker rmi
            docker pull ghcr.io/${{ github.repository_owner }}/piggybot:latest
            docker run -e BOT_TOKEN=${{ secrets.BOT_TOKEN }} -e POSTGRES_DSN=${{ secrets.POSTGRES_DSN }} -e REDIS_DSN=${{ secrets.REDIS_DSN }} -e APP_HOST=${{ secrets.APP_HOST }} -e APP_PORT=${{ secrets.APP_PORT }} -e WEBHOOK_DOMAIN=${{ secrets.WEBHOOK_DOMAIN }} -e WEBHOOK_PATH=${{ secrets.WEBHOOK_PATH }} -e ENVIRONMENT=${{ secrets.ENVIRONMENT }} -e SERVICE_NAME=${{ secrets.SERVICE_NAME }} -d --name piggybot ghcr.io/${{ github.repository_owner }}/piggybot:latest